<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.share.schedule.dao.ScheduleDao">
  <resultMap id="BaseResultMap" type="com.share.schedule.model.Schedule">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="isNext" jdbcType="INTEGER" property="isnext" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="room" jdbcType="VARCHAR" property="room" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, isNext, `order`, `date`, room, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.share.schedule.model.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from schedule
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.share.schedule.model.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.share.schedule.model.Schedule" useGeneratedKeys="true">
    insert into schedule (isNext, `order`, `date`, 
      room, createTime, updateTime
      )
    values (#{isnext,jdbcType=INTEGER}, #{order,jdbcType=INTEGER}, #{date,jdbcType=DATE}, 
      #{room,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.share.schedule.model.Schedule" useGeneratedKeys="true">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="isnext != null">
        isNext,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="date != null">
        `date`,
      </if>
      <if test="room != null">
        room,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="isnext != null">
        #{isnext,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="room != null">
        #{room,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.share.schedule.model.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryAllSchedule" resultType="com.share.schedule.model.Schedule">
    select
    <include refid="Base_Column_List"/>
    from schedule
  </select>
  <select id="getPeriod" resultType="com.share.schedule.model.Schedule">
    select
    <include refid="Base_Column_List"/>
    from schedule
    where isNext != 0
  </select>
  <select id="getNextOne" resultType="com.share.schedule.model.Schedule">
    select
    <include refid="Base_Column_List"/>
    from schedule
    where isNext != 0
  </select>
  <select id="getLastOne" resultType="java.lang.Long">
    select max(schedule.order)
    from schedule
  </select>
  <select id="getMaxId" resultType="java.lang.Long">
    select max(schedule.id)
    from schedule
  </select>
  <select id="selectLastDate" resultType="java.util.Date">
    select max(schedule.date)
    from schedule
  </select>
  <select id="getLastOneInt" resultType="java.lang.Integer">
    select max(schedule.order)
    from schedule
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.isnext != null">
        isNext = #{record.isnext,jdbcType=INTEGER},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        `date` = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.room != null">
        room = #{record.room,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set id = #{record.id,jdbcType=BIGINT},
      isNext = #{record.isnext,jdbcType=INTEGER},
      `order` = #{record.order,jdbcType=INTEGER},
      `date` = #{record.date,jdbcType=DATE},
      room = #{record.room,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.share.schedule.model.Schedule">
    update schedule
    <set>
      <if test="isnext != null">
        isNext = #{isnext,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        `date` = #{date,jdbcType=DATE},
      </if>
      <if test="room != null">
        room = #{room,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.share.schedule.model.Schedule">
    update schedule
    set isNext = #{isnext,jdbcType=INTEGER},
      `order` = #{order,jdbcType=INTEGER},
      `date` = #{date,jdbcType=DATE},
      room = #{room,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updatePeriodTo">
    update schedule
    set isNext = #{period,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateNext">
    update schedule
    set isNext = #{period,jdbcType=INTEGER}
    where schedule.order = #{nextOneOrder,jdbcType=BIGINT}
  </update>
  <update id="updateDate">
    update schedule
    set schedule.date = #{newDate,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="avoidFault">
    alter table `schedule` auto_increment = #{lastOne,jdbcType=BIGINT};
  </update>
  <update id="updateOrderSort">
    update schedule
    set schedule.order = #{newOrder,jdbcType=INTEGER}
    where schedule.id = #{lastId,jdbcType=BIGINT}
  </update>
  <update id="updateIsNext">
    update schedule
    set schedule.isNext = #{period,jdbcType=INTEGER}
    where schedule.id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateNextLong">
    update schedule
    set schedule.isNext = #{period,jdbcType=INTEGER}
    where schedule.id = #{id,jdbcType=BIGINT}
  </update>
  <update id="orderMeetingRoom">
    update schedule
    set schedule.room = #{room,jdbcType=INTEGER}
    where schedule.id = #{id,jdbcType=BIGINT}
  </update>
</mapper>